package algo;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Created by vikasnaiyar on 14/09/18.
 */
public class LilysHomework {

    public static void main(String[] args) {

        //int[] input = {2, 5, 3, 1};

        int[] input = {656085744,592976686,3037922,82266352,17574000,344340000,8406892,591292449,569625472,899357375,251327440,301303036,281400020,77370228,15516426,82859300,88364436,39767760,148417500,306863056,10926174,118195200,310408774,309307894,200852782,82193280,424056750,249277128,180368880,477624006,86748948,7434336,48882310,112635040,6614541,503907132,598034610,160500171,70444416,72752680,271416096,30521205,529365648,399367584,129849984,263500556,76737948,464269640,613416088,162724716,163420800,720512988,1217212920,727647624,383190420,8350904,3456024,289141064,123384024,158867856,82005504,36225521,533012608,54370440,17671500,53627000,26597644,855638940,55343960,57828624,108025344,21431808,1182600,265643950,30054300,219553915,74203500,658061160,7502400,931691763,295769136,107345925,80109000,130922055,33544944,65280,452996453,301655430,7828912,425016000,297635898,26861016,739961600,928116,19645470,8691456,5123880,596100015,2735436,25596483,173620720,202797504,161748972,30122300,11082820,574006860,426732182,71136825,105659136,1808140278,450779280,286831620,104683008,938781480,175050736,255681692,67096152,119518575,15449840,25273458,165048960,5642130,85199958,354920488,446786340,131214816,41533296,25766518,90782304,59007600,700369740,122021794,56982366,238027920,434370816,223677580,72463156,355858300,144914616,145950,13822570,19914930,11072100,21450528,124958730,105156800,20843784,781192188,448358850,6139822,95694780,78713888,677177472,9963972,366432768,181113408,725292862,473528052,12864000,518355540,55832070,318508876,89963781,1796290329,844308846,428627693,276255100,123609720,440449488,27589680,426614166,110068200,408846096,620309228,186565236,49051552,561738897,650114105,32646556,7174400,275364045,945364797,3674160,66314292,11073770,14885370,245088324,669628848,33110250,971699976,324099072,259496060,492110802,52206516,508725376,1534995792,148078816,57993375,121071195,381960195,12496176,23728250,159836835,712982980,160098622,909675852,110400300,485423372,30637838,339925836,285371600,13618242,80809650,92375040,265612788,1151909241,234661320,16962144,213417000,269646860,1015650090,117439476,53164566,6946134,89506800,305469360,13406432,292353000,9969642,43982198,23887296,67730660,16384192,218824704,1082660306,1679473908,136336179,39265884,1077096020,464272368,87048192,56752487,156212388,360621525,8472816,17613600,62143172,82696127,79939536,155805468,159499963,262072360,39827904,179532360,2455040,327280740,148409340,73738980,3394872,3082560,225009981,188912256,179487784,340340,315171072,96680664,621206280,536379504,391714074,65055960,105570465,365721408,106712025,286764660
        };
        System.out.println(lilysHomework(input));
        //System.out.println(lilysHomeworkUsingMergeSort(input,new int[4],0,input.length-1));


    }

    static long lilysHomework(int[] input) {
        long swapCount = 0;
        Map<Integer, Integer> valueIndexMap = new HashMap<>();
        int[] temp = new int[input.length];

        for (int i=0; i<input.length; i++) {
               valueIndexMap.put(input[i], i);
               temp[i] = input[i];
        }

        Arrays.sort(temp); // sort array

        for (int i=0; i<input.length;i++) {

            if(temp[i] != input[i]) {
                ++swapCount;

                int index = valueIndexMap.get(temp[i]);
                valueIndexMap.put(input[i], index);
                valueIndexMap.put(temp[i], i);

                input[index] = input[i];
                input[i] = temp[i];
            }

        }

        return swapCount;
    }

    static int lilysHomeworkUsingMergeSort(int[] arr, int[] temp, int left, int right) {
        int count =0;

        if(left >= right) {
            return count;
        }

        int mid = left + (right - left )/2;
        count += lilysHomeworkUsingMergeSort(arr, temp,left, mid);
        count += lilysHomeworkUsingMergeSort(arr, temp, mid+1, right);
        count += merge(arr,temp,left,mid, right);

        return count;
    }

    /**
     * Merge out
     * @param arr
     * @param temp
     * @param left
     * @param right
     * @param mid
     * @return
     */
    static int merge(int[] arr, int[] temp, int left, int mid, int right) {
        int count = 0;

        for (int i = left; i <= right; i++) {
            temp[i] = arr[i];
        }

        int j=left, k=mid+1;
        for (int i=left; i<= right; i++) {
            if(j > mid) {
                arr[i] = temp[k++];
            } else if(k > right) {
                arr[i] = temp[j++];
            } else if(temp[j] > temp[k]) {
                arr[i] = temp[k++];
                ++count;
            } else {
                arr[i] = temp[j++];
            }

        }

        return count;
    }

}



